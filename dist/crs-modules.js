var o=class{constructor(){this.registry={},this.componentRegistry={},this.componentLocations={},this.moduleLocations={}}async dispose(){await this.clear(),this.registry=null}async clear(){let t=Object.keys(this.registry);for(let s of t)delete this.registry[s]}async add(t,s){return this._addToRegistry(this.registry,t,s)}async addComponent(t,s){return this._addToRegistry(this.componentRegistry,t,s)}async addComponentLocation(t,s){return this._addToRegistry(this.componentLocations,t,s)}async addModuleLocation(t,s){return this._addToRegistry(this.moduleLocations,t,s)}async _addToRegistry(t,s,a){t[s]==null&&(t[s]=a)}async remove(t){delete this.registry[t]}async get(t){let s=document.body.dataset.appPath||"",a=this.registry[t];if(a!=null)return typeof a!="string"?a:(a=await import(`${s}${a}`),this.registry[t]=a);let e=t.split(":"),n=this.moduleLocations[e[0]];if(n!=null)return a=await import(`${n}/${e[1]}.js`),this.registry[t]=a}async getComponent(t,s){let a=this.componentRegistry[t];if(a!=null)return typeof a!="string"?void 0:await this.loadComponentFromPath(t,a);let e=this.componentLocations[s];e!=null&&await this.loadComponentFromPath(t,`${e}/${t}/${t}.js`)}async loadComponentFromPath(t,s){let a=document.body.dataset.appPath||"";this.componentRegistry[t]=await import(`${a}${s}`)}async getDefault(t){return(await this.get(t))?.default}async getConstant(t,s){return(await this.get(t))?.[s]}async getPrototype(t,s){return(await this.get(t))?.[s||t]}async getInstanceOf(t,s,...a){let e=await this.getPrototype(t,s||t);return e?new e(...a):null}async getInstanceOfDefault(t,...s){let a=await this.getDefault(t);return a?new a(...s):null}async call(t,s,a,...e){return await(await this.get(t))?.[s||t]?.call(a,...e)}async callDefault(t,s,...a){return await(await this.getDefault(t))?.call(s,...a)}};globalThis.crs=globalThis.crs||{};globalThis.crs.modules=new o;globalThis.crs.modules.enableBinding=async i=>{for(let t of i||[])await globalThis.crs.modules.addComponent(t[0],t[1]);globalThis.crsbinding!=null&&(globalThis.crs.modules._parseElement=globalThis.crsbinding.parsers.parseElement,globalThis.crsbinding.parsers.parseElement=async(t,s,a)=>{await globalThis.crs.modules._parseElement(t,s,a),t.dataset!=null&&await globalThis.crs.modules.getComponent(t.nodeName.toLowerCase(),t.dataset?.module)})};export{o as Modules};
